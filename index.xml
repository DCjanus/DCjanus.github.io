<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>DCjanus 的博客</title><link>https://blog.dcjanus.com/</link><description>DCjanus 的博客</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>dcjanus@dcjanus.com (DCjanus)</managingEditor><webMaster>dcjanus@dcjanus.com (DCjanus)</webMaster><lastBuildDate>Tue, 11 Feb 2025 00:07:27 +0800</lastBuildDate><atom:link href="https://blog.dcjanus.com/index.xml" rel="self" type="application/rss+xml"/><item><title>中二时期的 QQ 签名</title><link>https://blog.dcjanus.com/posts/chuunibyou_in_qq/</link><pubDate>Tue, 11 Feb 2025 00:07:27 +0800</pubDate><author><name>DCjanus</name><uri>https://github.com/dcjanus</uri><email>DCjanus@dcjanus.com</email></author><guid>https://blog.dcjanus.com/posts/chuunibyou_in_qq/</guid><description><![CDATA[<p>闲着无聊打开很久没用的 QQ，看到了自己中二时期的签名，很多内容的都是辛辛苦苦从网上摘抄的，但谷歌搜索一下，却有部分已找不到出处。
刚接触互联网时，互联网是开放、共享的，我曾幻想互联网上有用的信息会永远保存且公开可查。</p>
<p>我想当初看到这些句子时，一定伴随着某种正面的情感，才会按耐不住兴奋，把它们换成自己的 QQ 签名；
但当我无法搜索到这些句子出处时，我感到了一种失落，仿佛失去了一部分的记忆。
担心明天 QQ 突然不再保存历史签名，我决定把这些签名记录下来，也便于让它们重新回到互联网。</p>
<p>但不得不说，重新看这些签名真的太尴尬了。</p>]]></description></item><item><title>使用 Yaegi 在 Go 语言项目中嵌入 Go 作为脚本</title><link>https://blog.dcjanus.com/posts/usage-of-yaegi/</link><pubDate>Sun, 26 Feb 2023 01:20:43 +0800</pubDate><author><name>DCjanus</name><uri>https://github.com/dcjanus</uri><email>DCjanus@dcjanus.com</email></author><guid>https://blog.dcjanus.com/posts/usage-of-yaegi/</guid><description><![CDATA[<h1 id="背景" class="headerLink">
    <a href="#%e8%83%8c%e6%99%af" class="header-mark"></a>背景</h1><p>目前（2023年2月）维护着公司的对象存储系统，需要一套用于多机房流量调度与缓存的系统。目前由若干套自运维的 NGINX+ATS 集群实现，由于年久失修，存在一些问题，比如：日志信息不足、监控缺失、配置管理困难等，因此需要重构。</p>
<p>理论上可以研究研究 OpenResty 等基于 NGINX 的扩展方案，但由于我们不想为这个项目投入长期人力，能够较为简单的对接公司监控、日志等基础设施，并承载部分 dirty 的业务逻辑，因此决定使用 Go 语言开发。</p>]]></description></item><item><title>Linux 内核版本号过大导致 TiKV 的一次 Panic</title><link>https://blog.dcjanus.com/posts/linux-version-number-and-tikv-panic/</link><pubDate>Sat, 17 Dec 2022 23:19:25 +0800</pubDate><author><name>DCjanus</name><uri>https://github.com/dcjanus</uri><email>DCjanus@dcjanus.com</email></author><guid>https://blog.dcjanus.com/posts/linux-version-number-and-tikv-panic/</guid><description><![CDATA[<h2 id="tldr" class="headerLink">
    <a href="#tldr" class="header-mark"></a>TLDR</h2><p>Linux 内核版本号曾被认为可以用三个 8bit 无符号整数表示，但后来这个约定被打破。TiKV 间接使用的库在解析内核版本号时，没有考虑到这一点，导致 panic。</p>]]></description></item><item><title>一些 CDN 与网站优化的零散知识</title><link>https://blog.dcjanus.com/posts/some-notes-about-cdn-and-website/</link><pubDate>Thu, 02 Jun 2022 09:15:48 +0800</pubDate><author><name>DCjanus</name><uri>https://github.com/dcjanus</uri><email>DCjanus@dcjanus.com</email></author><guid>https://blog.dcjanus.com/posts/some-notes-about-cdn-and-website/</guid><description>&lt;p>目前（2022年5月）工作是维护某公司的对象存储和整套资源分发体系，经常跟 CDN 与客户端打交道，最近和网友闲聊过程中，发现有些知识虽然没有太大适用空间也说不上难点，但还算有趣，简单记录一下。&lt;/p></description></item><item><title>一些零碎知识</title><link>https://blog.dcjanus.com/posts/note/</link><pubDate>Mon, 31 Jan 2022 21:29:55 +0800</pubDate><author><name>DCjanus</name><uri>https://github.com/dcjanus</uri><email>DCjanus@dcjanus.com</email></author><guid>https://blog.dcjanus.com/posts/note/</guid><description>平时有很多零碎的知识点，写起来没几句，重新摸索一遍可能很花时间，在这里简单记录一下，方便自己查阅。</description></item><item><title>Cargo Registry 稀疏索引的一些介绍</title><link>https://blog.dcjanus.com/posts/cargo-registry-index-in-http/</link><pubDate>Wed, 26 Jan 2022 17:36:28 +0000</pubDate><author><name>DCjanus</name><uri>https://github.com/dcjanus</uri><email>DCjanus@dcjanus.com</email></author><guid>https://blog.dcjanus.com/posts/cargo-registry-index-in-http/</guid><description><![CDATA[<p>Rust 的官方包管理系统依赖一个 GitHub 上的 Git 仓库<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>管理索引信息，其相关格式也有较为详细的定义<sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup>。</p>
<p>随着 crates.io-index 体积的不断膨胀，现有的分发方案逐渐表现出了一些弊端，Rust 社区开发者也提出了名为稀疏索引（Spare Index）的 RFC<sup id="fnref:3"><a href="#fn:3" class="footnote-ref" role="doc-noteref">3</a></sup>，用于优化相关场景。春节放假无聊，简单介绍一下前因后果，也希望有兴趣有能力的人可以推动其落地与发展。</p>]]></description></item><item><title>大规模存储系统成本性能优化的一些方法</title><link>https://blog.dcjanus.com/posts/storage_cost_optimization/</link><pubDate>Sun, 19 Dec 2021 09:58:31 +0800</pubDate><author><name>DCjanus</name><uri>https://github.com/dcjanus</uri><email>DCjanus@dcjanus.com</email></author><guid>https://blog.dcjanus.com/posts/storage_cost_optimization/</guid><description><![CDATA[<p>目前（2021年）的主要工作是参与公司自研对象存储的开发和维护，记录一些常见的成本优化思路。因为投入产出比的原因，不一定所有企业都能够落地。</p>
<p>挑选的都是可以从公开渠道找到相关信息的方案，不涉及企业内部技术机密。</p>
<p>内容很少，想到啥更新啥。</p>]]></description></item></channel></rss>